AWSTemplateFormatVersion: '2010-09-09'
Description: create codepipeline

Parameters:
  ArtifactBucketName:
    # Default: 
    Type: String
  GitHubAccountName:
    # Default: 
    Type: String
  GitHubRepositoryName:
    # Default: 
    Type: String
  GitHubBranchName:
    # Default: 
    Type: String
  GitHubOAuthToken:
    # Default: 
    Type: String

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref ArtifactBucketName

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  # - sts:*
                  # - ses:*
                Resource: "*"
                Effect: Allow
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Action:
                  - cloudformation:*
                  - codebuild:*
                  - codedeploy:*
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                  - iam:PassRole
                Resource:
                  - "*"
                Effect: Allow
              - Action:
                  - ssm:PutParameter
                Resource: "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                Effect: Allow

  StagingCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - iam:PassRole
              - Resource: "arn:aws:apigateway:ap-northeast-1::*"
                Effect: Allow
                Action:
                  - apigateway:*
              - Resource: "arn:aws:iam::*:role/*"
                Effect: Allow
                Action:
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:CreateRolePolicy
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
              - Resource: "arn:aws:cloudformation:ap-northeast-1:aws:transform/Serverless-2016-10-31"
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
              - Resource: "arn:aws:logs:*:*:*"
                Effect: Allow
                Action:
                  - logs:*
              - Resource: "arn:aws:lambda:ap-northeast-1:*:function:*"
                Effect: Allow
                Action:
                  - lambda:*
              - Resource: "arn:aws:dynamodb:ap-northeast-1:*"
                Effect: Allow
                Action:
                  - dynamodb:*
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

  GitHubSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: SecretToken
        ExcludePunctuation: true
        PasswordLength: 40

  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Join ['', ['{{resolve:secretsmanager:', !Ref GitHubSecret, ':SecretString:SecretToken}}' ]]
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref CodePipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt CodePipeline.Version
      RegisterWithThirdParty: true

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        EnvironmentVariables:
          - Name: OUTPUT_BUCKET_NAME
            Value: !Ref ArtifactBucket

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Name: !Ref AWS::StackName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubAccountName
                Repo: !Ref GitHubRepositoryName
                PollForSourceChanges: false
                Branch: !Ref GitHubBranchName
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
              OutputArtifacts:
                - Name: App
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
              Region: ap-northeast-1
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: MyApp
        - Name: Staging
          Actions:
            - Name: BookclipperLambdaStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: BookclipperLambdaChangeSet
                RoleArn: !GetAtt StagingCloudFormationRole.Arn
                Capabilities: CAPABILITY_IAM
                StackName: BookclipperLambdaStack
                TemplatePath: MyApp::packaged-template.yaml
              RunOrder: 1
              InputArtifacts:
                - Name: MyApp
              OutputArtifacts: []
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: BookclipperLambdaChangeSet
                StackName: BookclipperLambdaStack
              RunOrder: 2
              InputArtifacts: []
              OutputArtifacts: []
